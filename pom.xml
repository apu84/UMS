<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ums</groupId>
  <artifactId>ums-root</artifactId>
  <version>trunk-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>UMS</name>
  <description>UMS application</description>

  <properties>
    <project.version>trunk-SNAPSHOT</project.version>
    <spring.version>4.2.3.RELEASE</spring.version>
    <jersey.version>2.25</jersey.version>
    <!-- Adapt this to a version found on http://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-maven-plugin/ -->
    <jetty.maven.plugin.version>9.2.6.v20141205</jetty.maven.plugin.version>
    <logback.version>1.1.7</logback.version>
    <logstash.logback.version>4.6</logstash.logback.version>
    <jcloverslf4j.version>1.7.6</jcloverslf4j.version>
    <github.global.server>github</github.global.server>
    <slf4j.version>1.7.0</slf4j.version>
    <aopalliance.version>1.0</aopalliance.version>
    <apache-shiro-version>1.2.4</apache-shiro-version>
    <pentaho-version>5.0.1</pentaho-version>
    <itext-version>2.1.7</itext-version>
    <jxls-version>2.3.0</jxls-version>
    <jxls-poi-version>1.0.9</jxls-poi-version>
    <apache-poi-version>3.15</apache-poi-version>
    <spring-data-mongodb-version>1.9.2.RELEASE</spring-data-mongodb-version>
    <spring-integration-version>4.2.3.RELEASE</spring-integration-version>
    <spring-integration-ftp-version>4.2.3.RELEASE</spring-integration-ftp-version>
    <spring-data-solr>2.0.6.RELEASE</spring-data-solr>
    <main.basedir>${project.basedir}</main.basedir>
  </properties>

  <!-- <repositories>
     <repository>
       <id>maven2-repository.java.net</id>
       <name>Java.net Repository for Maven</name>
       <url>http://download.java.net/maven/2/</url>
     </repository>
   </repositories>

   <distributionManagement>
     <repository>
       <id>internal.repo</id>
       <name>Temporary Staging Repository</name>
       <url>file://${project.build.directory}/maven-repo</url>
     </repository>
   </distributionManagement> -->
  <repositories>
    <repository>
      <id>codelds</id>
      <url>https://code.lds.org/nexus/content/groups/main-repo</url>
    </repository>
    <repository>
      <id>pentaho-releases</id>
      <url>
        http://nexus.pentaho.org/content/groups/omni
      </url>
    </repository>
    <repository>
      <id>central.maven.org</id>
      <name>central.maven.org</name>
      <url>http://central.maven.org/maven2/</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- Spring 3 dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <scope>provided</scope>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <scope>provided</scope>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <scope>provided</scope>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <version>${aopalliance.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--Jersey-->
    <dependency>
      <groupId>org.glassfish.jersey.ext</groupId>
      <artifactId>jersey-spring3</artifactId>
      <version>${jersey.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-expression</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-common</artifactId>
      <version>${jersey.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${jersey.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.hk2</groupId>
      <artifactId>spring-bridge</artifactId>
      <version>2.2.0-b14</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.bundles.repackaged</groupId>
      <artifactId>jersey-guava</artifactId>
      <version>${jersey.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-processing</artifactId>
      <version>${jersey.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--Apache Shiro-->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>${apache-shiro-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>${apache-shiro-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.9.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.3.2</version>
      <scope>provided</scope>
    </dependency>


    <!--database-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.26</version>
      <scope>provided</scope>
    </dependency>
    <!-- testing -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.10.18</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>2.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-test-framework</artifactId>
      <version>1.19.3</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>2.9.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>1.6.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>1.6.4</version>
      <scope>test</scope>
    </dependency>

    <!-- LogBack dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash.logback.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.jolbox</groupId>
      <artifactId>bonecp</artifactId>
      <version>0.8.0.RELEASE</version>
      <scope>provided</scope>
    </dependency>

    <!--Reporting-->
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-classic-core</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>libbase</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>libdocbundle</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>libfonts</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>libformat</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>libformula</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>libloader</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>librepository</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>libserializer</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>libxml</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>libswing</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho-library</groupId>
      <artifactId>flute</artifactId>
      <version>${pentaho-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <version>1.7</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>net.spy</groupId>
      <artifactId>spymemcached</artifactId>
      <version>2.12.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itextpdf</artifactId>
      <version>5.5.9</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jxls</groupId>
      <artifactId>jxls</artifactId>
      <version>${jxls-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jxls</groupId>
      <artifactId>jxls-poi</artifactId>
      <version>${jxls-poi-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>0.7.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.7.4</version>
      <scope>provided</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-mongodb</artifactId>
      <version>${spring-data-mongodb-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-solr</artifactId>
      <version>${spring-data-solr}</version>
      <scope>provided</scope>
    </dependency>
    <!--Spring integration-->
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-core</artifactId>
      <version>${spring-integration-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-ftp</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-file</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>RELEASE</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>RELEASE</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
      <version>1.2.2.RELEASE</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.reactivex.rxjava2</groupId>
      <artifactId>rxjava</artifactId>
      <version>2.1.9</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mapdb</groupId>
      <artifactId>mapdb</artifactId>
      <version>3.0.5</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- Graph Library for Java -->
    <dependency>
      <groupId>org.jgrapht</groupId>
      <artifactId>jgrapht-core</artifactId>
      <version>1.1.0</version>
      <scope>provided</scope>
    </dependency>
    <!-- End of graph library -->

    <!--  Firebase Integration  -->
    <dependency>
      <groupId>com.google.firebase</groupId>
            <artifactId>firebase-admin</artifactId>
            <version>5.9.0</version>
            <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12.4</version>
          <configuration>
            <skipTests>true</skipTests>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.0.0</version>
          <configuration>
            <webResources>
              <resource>
                <!-- this is relative to the pom.xml directory -->
                <directory>src/main/ts</directory>
                <directory>src/main/webapp</directory>
              </resource>
            </webResources>
          </configuration>
        </plugin>
        <plugin><!-- mvn java-formatter:format -->
          <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
          <artifactId>maven-java-formatter-plugin</artifactId>
          <version>0.4</version>
          <configuration>
            <configFile>${main.basedir}/build-tools/src/main/resources/eclipse/eclipse-java-google-style.xml
            </configFile>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>all</id>
      <properties>
        <assembly.target>all</assembly.target>
      </properties>

      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <modules>
        <module>build-tools</module>
        <module>ums-api</module>
        <module>ums-core</module>
        <module>ums-webservice-core</module>
        <!--<module>ums-web</module>-->
        <module>ums-dist</module>
        <module>ums-webservice-academic</module>
        <module>ums-webservice-bank</module>
        <module>ums-webservice-library</module>
        <module>ums-webservice-registrar</module>
        <module>ums-webservice-account</module>
        <module>codegenerator</module>
        <module>auth-support</module>
        <module>microservice</module>
        <!-- <module>ums-web-templates</module>-->
      </modules>

      <build>
        <plugins>
          <plugin>
            <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
            <artifactId>maven-java-formatter-plugin</artifactId>
            <executions>
              <execution>
                <id>format</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!--webservice wise build profile. Only api, core and mentioned webservice package will be build-->
      <id>academic</id>
      <properties>
        <assembly.target>academic</assembly.target>
      </properties>

      <modules>
        <module>ums-api</module>
        <module>ums-core</module>
        <module>ums-webservice-core</module>
        <module>ums-dist</module>
        <module>ums-webservice-academic</module>
      </modules>

      <build>
        <plugins>
          <plugin>
            <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
            <artifactId>maven-java-formatter-plugin</artifactId>
            <executions>
              <execution>
                <id>format</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--webservice wise build profile. Only api, core and mentioned webservice package will be build-->
      <id>accounts</id>
      <properties>
        <assembly.target>accounts</assembly.target>
      </properties>

      <modules>
        <module>ums-api</module>
        <module>ums-core</module>
        <module>ums-webservice-core</module>
        <module>ums-dist</module>
        <module>ums-webservice-account</module>
      </modules>

      <build>
        <plugins>
          <plugin>
            <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
            <artifactId>maven-java-formatter-plugin</artifactId>
            <executions>
              <execution>
                <id>format</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--webservice wise build profile. Only api, core and mentioned webservice package will be build-->
      <id>library</id>
      <properties>
        <assembly.target>library</assembly.target>
      </properties>

      <modules>
        <module>ums-api</module>
        <module>ums-core</module>
        <module>ums-webservice-core</module>
        <module>ums-dist</module>
        <module>ums-webservice-library</module>
      </modules>

      <build>
        <plugins>
          <plugin>
            <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
            <artifactId>maven-java-formatter-plugin</artifactId>
            <executions>
              <execution>
                <id>format</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--webservice wise build profile. Only api, core and mentioned webservice package will be build-->
      <id>registrar</id>
      <properties>
        <assembly.target>registrar</assembly.target>
      </properties>

      <modules>
        <module>ums-api</module>
        <module>ums-core</module>
        <module>ums-webservice-core</module>
        <module>ums-dist</module>
        <module>ums-webservice-registrar</module>
      </modules>

      <build>
        <plugins>
          <plugin>
            <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
            <artifactId>maven-java-formatter-plugin</artifactId>
            <executions>
              <execution>
                <id>format</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--webservice wise build profile. Only api, core and mentioned webservice package will be build-->
      <id>bank</id>
      <properties>
        <assembly.target>bank</assembly.target>
      </properties>

      <modules>
        <module>ums-api</module>
        <module>ums-core</module>
        <module>ums-webservice-core</module>
        <module>ums-dist</module>
        <module>ums-webservice-bank</module>
      </modules>

      <build>
        <plugins>
          <plugin>
            <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
            <artifactId>maven-java-formatter-plugin</artifactId>
            <executions>
              <execution>
                <id>format</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>test-server</id>
      <properties>
        <assembly.target>all</assembly.target>
      </properties>
      <modules>
        <module>build-tools</module>
        <module>ums-api</module>
        <module>ums-core</module>
        <module>ums-webservice-core</module>
        <module>ums-dist</module>
        <module>ums-webservice-academic</module>
        <module>ums-webservice-bank</module>
        <module>ums-webservice-library</module>
        <module>ums-webservice-registrar</module>
        <module>ums-webservice-account</module>
        <module>codegenerator</module>
        <module>auth-support</module>
        <module>microservice</module>
      </modules>
    </profile>
  </profiles>

</project>
