--/adding 'status' column which will define whether a student is currently active or not
alter table students
add status number;

update students
set status=1;

--in students table, 'adviser' data type is set to number, but, the adviser will be the employee, so as employee_id is varchar2(15), so adviser data type is changed to varchar2(15)


alter table students
modify(
  adviser varchar2(15)
);

DROP TABLE DB_IUMS.EQUIVALENT_COURSE CASCADE CONSTRAINTS;

CREATE TABLE DB_IUMS.EQUIVALENT_COURSE
(
  ID             NUMBER,
  OLD_COURSE_ID  VARCHAR2(25 BYTE),
  NEW_COURSE_ID  VARCHAR2(25 BYTE),
  LAST_MODIFIED  VARCHAR2(18 BYTE)
)

DROP SEQUENCE DB_IUMS.SQN_EQUIVALENT_COURSE_ID;

CREATE SEQUENCE DB_IUMS.SQN_EQUIVALENT_COURSE_ID
  START WITH 11111
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

DROP TRIGGER DB_IUMS.EQUIVALENT_COURSE_TRIGGER;

CREATE OR REPLACE TRIGGER DB_IUMS.EQUIVALENT_COURSE_TRIGGER
BEFORE INSERT ON DB_IUMS.EQUIVALENT_COURSE
FOR EACH ROW
BEGIN
  SELECT DB_IUMS.SQN_EQUIVALENT_COURSE_ID.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/

CREATE TABLE DB_IUMS.TASK_STATUS
(
  TASK_ID               VARCHAR2(50),
  STATUS                NUMBER,
  PROGRESS_DESC         VARCHAR2(250),
  TASK_COMPLETION_DATE  DATE,
  LAST_MODIFIED         VARCHAR2(18),
  SERIAL                NUMBER
)


DROP SEQUENCE DB_IUMS.SQN_TASK_STATUS_SERIAL;

CREATE SEQUENCE DB_IUMS.SQN_TASK_STATUS_SERIAL
  START WITH 11
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

DROP TRIGGER DB_IUMS.TASK_STATUS_TRIGGER;

CREATE OR REPLACE TRIGGER DB_IUMS.TASK_STATUS_TRIGGER
BEFORE INSERT ON DB_IUMS.TASK_STATUS
FOR EACH ROW
BEGIN
  SELECT DB_IUMS.SQN_TASK_STATUS_SERIAL.NEXTVAL
  INTO   :new.SERIAL
  FROM   dual;
END;
/

CREATE TABLE DB_IUMS.RESULT_PUBLISH
(
  ID             NUMBER,
  PROGRAM_ID     NUMBER,
  SEMESTER_ID    NUMBER,
  PUBLISH_DATE   DATE,
  LAST_MODIFIED  VARCHAR2(1)
)

CREATE SEQUENCE DB_IUMS.SQN_RESULT_PUBLISH_ID
  START WITH 20000
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER DB_IUMS.RESULT_PUBLISH_TRIGGER
BEFORE INSERT ON DB_IUMS.RESULT_PUBLISH
FOR EACH ROW
BEGIN
  SELECT DB_IUMS.SQN_RESULT_PUBLISH_ID.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/

//****************************************************************
table: mst_faculty
//***************************************************************
ALTER TABLE DB_IUMS.MST_FACULTY
 DROP PRIMARY KEY CASCADE;

DROP TABLE DB_IUMS.MST_FACULTY CASCADE CONSTRAINTS;

CREATE TABLE DB_IUMS.MST_FACULTY
(
  ID             NUMBER,
  LONG_NAME      VARCHAR2(100 BYTE),
  SHORT_NAME     VARCHAR2(20 BYTE),
  LAST_MODIFIED  VARCHAR2(18 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;


--  There is no statement for index DB_IUMS.SYS_C0011826.
--  The object is created when the parent object is created.

CREATE OR REPLACE TRIGGER DB_IUMS.trg_faculty_id
  before insert ON DB_IUMS.MST_FACULTY
  for EACH ROW
BEGIN
    select faculty_id_seq.nextval
      INTO :new.id
      from dual;
  END;
/


ALTER TABLE DB_IUMS.MST_FACULTY ADD (
  PRIMARY KEY
  (ID)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
                FLASH_CACHE      DEFAULT
                CELL_FLASH_CACHE DEFAULT
               )
  ENABLE VALIDATE);

Insert into DB_IUMS.MST_FACULTY
   (ID, LONG_NAME, SHORT_NAME, LAST_MODIFIED)
 Values
   (1, 'Engineering/Architecture Faculty', 'Engg. Faculty', '12345');
Insert into DB_IUMS.MST_FACULTY
   (ID, LONG_NAME, SHORT_NAME, LAST_MODIFIED)
 Values
   (2, 'Business Faculty', 'Business Faculty', '12345');
COMMIT;




//************************************************************
sequence form parameter_setting
//************************************************************
create SEQUENCE  param_setting_id_seq;

create trigger trg_param_setting_id
  before insert on MST_PARAMETER_SETTING
  for EACH ROW
  BEGIN
    SELECT  param_setting_id_seq.nextval
      into :new.PS_ID
      from dual;
  END;
  /



  //**************************************************************
  adding faculty column in mst_program
  //**************************************************************

  alter table MST_PROGRAM
  add  faculty_id NUMBER;


  update mst_program set FACULTY_ID=1 where PROGRAM_SHORT_NAME!='BBA';

  update mst_program set FACULTY_ID=2 where PROGRAM_SHORT_NAME='BBA';



/***************************************************FEE STRUCTURE**********************************/
CREATE TABLE DB_IUMS.FEE_CATEGORY
(
  ID             VARCHAR2(50),
  NAME           VARCHAR2(100),
  DESCRIPTION    VARCHAR2(300),
  TYPE           NUMBER,
  LAST_MODIFIED  VARCHAR2(18)
);

COMMENT ON COLUMN DB_IUMS.FEE_CATEGORY.TYPE IS '0=OTHERS, 1=PRIMARY'

CREATE TABLE DB_IUMS.FEE
(
  ID                NUMBER,
  FEE_CATEGORY_ID   VARCHAR2(30),
  SEMESTER_ID       NUMBER,
  FACULTY_ID        NUMBER,
  PROGRAM_TYPE_ID   NUMBER,
  PROGRAM_CATEGORY  NUMBER,
  AMOUNT            NUMBER,
  LAST_MODIFIED     VARCHAR2(18 BYTE)
);

COMMENT ON COLUMN DB_IUMS.FEE.PROGRAM_CATEGORY IS '0=REGULAR, 1=EVENING';

CREATE SEQUENCE DB_IUMS.SQN_FEE_ID
  START WITH 9000
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER DB_IUMS.FEE_TRIGGER
BEFORE INSERT ON DB_IUMS.FEE
FOR EACH ROW
BEGIN
  SELECT DB_IUMS.SQN_FEE_ID.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;


ALTER TABLE DB_IUMS.USERS
ADD (LAST_MODIFIED VARCHAR2(18 BYTE));

ALTER TABLE DB_IUMS.MST_ROLE
ADD (LAST_MODIFIED VARCHAR2(18 BYTE));

****************************** admission ******************************************************
DROP TABLE DB_IUMS.ADMISSION_STUDENTS CASCADE CONSTRAINTS;

CREATE TABLE DB_IUMS.ADMISSION_STUDENTS
(
  SEMESTER_ID             NUMBER,
  RECEIPT_ID              VARCHAR2(25 BYTE),
  PIN                     VARCHAR2(25 BYTE),
  HSC_BOARD               VARCHAR2(25 BYTE),
  HSC_ROLL                VARCHAR2(25 BYTE),
  HSC_REGNO               VARCHAR2(25 BYTE),
  HSC_YEAR                NUMBER,
  HSC_GROUP               VARCHAR2(25 BYTE),
  SSC_BOARD               VARCHAR2(25 BYTE),
  SSC_ROLL                VARCHAR2(25 BYTE),
  SSC_YEAR                NUMBER,
  SSC_GROUP               VARCHAR2(25 BYTE),
  GENDER                  VARCHAR2(6 BYTE),
  DATE_OF_BIRTH           DATE,
  STUDENT_NAME            VARCHAR2(50 BYTE),
  FATHER_NAME             VARCHAR2(50 BYTE),
  MOTHER_NAME             VARCHAR2(50 BYTE),
  SSC_GPA                 FLOAT(126),
  HSC_GPA                 FLOAT(126),
  QUOTA                   VARCHAR2(2 BYTE),
  ADMISSION_ROLL          VARCHAR2(25 BYTE),
  MERIT_SL_NO             NUMBER,
  STUDENT_ID              VARCHAR2(9 BYTE),
  ALLOCATED_PROGRAM_ID    NUMBER,
  MIGRATION_STATUS        NUMBER,
  LAST_MODIFIED           VARCHAR2(18 BYTE),
  UNIT                    VARCHAR2(15 BYTE),
  PROGRAM_TYPE            NUMBER,
  NID                     VARCHAR2(100 BYTE),
  BIRTH_REG               VARCHAR2(100 BYTE),
  PASSPORT                VARCHAR2(100 BYTE),
  PROGRAM_ID_BY_MERIT     NUMBER,
  PROGRAM_ID_BY_TRANSFER  NUMBER,
  PRESENT_STATUS          NUMBER,
  DEADLINE                DATE,
  VERIFICATION_STATUS     NUMBER,
  MIGRATED_FROM           VARCHAR2(25 BYTE),
  UNDERTAKEN_DEADLINE     DATE
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN DB_IUMS.ADMISSION_STUDENTS.PRESENT_STATUS IS '0 = absent, 1= present';



CREATE UNIQUE INDEX DB_IUMS.ADMISSION_STUDENTS_UNIQ ON DB_IUMS.ADMISSION_STUDENTS
(SEMESTER_ID, RECEIPT_ID, PIN, SSC_ROLL, HSC_ROLL,
QUOTA, STUDENT_ID, ALLOCATED_PROGRAM_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;

//**************admission payment info*************************
ALTER TABLE DB_IUMS.PAYMENT_INFO
 DROP PRIMARY KEY CASCADE;

DROP TABLE DB_IUMS.PAYMENT_INFO CASCADE CONSTRAINTS;

CREATE TABLE DB_IUMS.PAYMENT_INFO
(
  ID             NUMBER,
  REFERENCE_ID   VARCHAR2(25 BYTE),
  SEMESTER_ID    NUMBER,
  PAYMENT_TYPE   NUMBER,
  AMOUNT         NUMBER,
  PAYMENT_DATE   TIMESTAMP(6),
  LAST_MODIFIED  VARCHAR2(18 BYTE),
  PAYMENT_MODE   NUMBER
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;


--  There is no statement for index DB_IUMS.SYS_C0012023.
--  The object is created when the parent object is created.

CREATE OR REPLACE TRIGGER DB_IUMS.admission_payment_trig
  BEFORE INSERT ON DB_IUMS.PAYMENT_INFO
  for EACH ROW
BEGIN
    SELECT  admission_payment_seq.nextval
      INTO :new.id
      FROM dual;
  END;
/


ALTER TABLE DB_IUMS.PAYMENT_INFO ADD (
  PRIMARY KEY
  (ID)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
                FLASH_CACHE      DEFAULT
                CELL_FLASH_CACHE DEFAULT
               )
  ENABLE VALIDATE);



//***********************roles**********************
Insert into DB_IUMS.MST_ROLE
   (ROLE_ID, ROLE_NAME)
 Values
   (10101, 'ug_admission_chairman');
Insert into DB_IUMS.MST_ROLE
   (ROLE_ID, ROLE_NAME)
 Values
   (10102, 'ug_admission_verifier');
Insert into DB_IUMS.MST_ROLE
   (ROLE_ID, ROLE_NAME)
 Values
   (20101, 'bank_user');

//*****************navigation************************
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2054, 'Taletalk Data Upload', 'admission:taletalkDataUpload', '/uploadTaletalkData', 0,
    'fa fa-th', 'bg-blue', 104, 1, '12345');
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2055, 'Merit List Upload', 'admission:meritListUpload', '/uploadMeritList', 0,
    'fa fa-th', 'bg-blue', 105, 1, '12345');
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2056, 'Admission Deadline', 'admission:deadline', '/admissionDeadLine', 0,
    'fa fa-th', 'bg-blue', 106, 1, '12345');
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2057, 'Admission Total Seat', 'admission:totalSeat', '/admissionTotalSeat', 0,
    'fa fa-th', 'bg-blue', 107, 1, '12345
');
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2058, 'Department Selection', 'admission:departmentSelection', '/admissionDepartmentSelection', 0,
    'fa fa-th', 'bg-blue', 108, 1, '12345');
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2059, 'Certificate Verification', 'admission:certificateVerification', '/certificateVerification', 0,
    'fa fa-th', 'bg-blue', 106, 1, '12345');
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2060, 'Admission Statistics', 'admission:statistics', '/admissionStatistics', 0,
    'fa fa-th', 'bg-blue', 109, 1, '2131346546');
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2061, 'Admission Fees', 'admission:fee', '/admissionFee', 0,
    'fa fa-file-word-0', 'bg-blue', 110, 1, '12265465');
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2062, 'Student Id', 'admission:studentId', '/admissionStudentId', 0,
    'fa fa-th', 'bg-blue', 111, 1, '565465465465');
Insert into DB_IUMS.MAIN_NAVIGATION
   (NAVIGATION_ID, MENU_TITLE, PERMISSION, LOCATION, PARENT_MENU,
    ICON_IMG_CLASS, ICON_COLOR_CLASS, VIEW_ORDER, STATUS, LAST_MODIFIED)
 Values
   (2063, 'Migration List ', 'admission:migration', '/admissionMigrationList', 0,
    'fa fa-th', 'bg-blue', 112, 1, '132132132132');



//******************************permissions*************************************
Insert into DB_IUMS.PERMISSIONS
   (ROLE_ID, PERMISSIONS, PERMISSION_ID, LAST_MODIFIED)
 Values
   (10101, 'admission:meritListUpload,admission:taletalkDataUpload,admission:deadline,admission:totalSeat,admission:departmentSelection,admission:certificateVerification,admission:statistics,admission:studentId, admission:migration', 1016, NULL);
Insert into DB_IUMS.PERMISSIONS
   (ROLE_ID, PERMISSIONS, PERMISSION_ID, LAST_MODIFIED)
 Values
   (10102, 'admission:meritListUpload,admission:taletalkDataUpload,admission:deadline, admission:totalSeat, admission:departmentSelection,admission:certificateVerification,admission:statistics, admission:studentId, admission:migration', 1017, NULL);
Insert into DB_IUMS.PERMISSIONS
   (ROLE_ID, PERMISSIONS, PERMISSION_ID, LAST_MODIFIED)
 Values
   (20101, 'admission:fee', 1018, NULL);



   //****************************users**************************
   Insert into DB_IUMS.USERS
      (USER_ID, PASSWORD, ROLE_ID, CREATED_ON, CREATED_BY,
       LAST_LOGIN_ON, STATUS, EMPLOYEE_ID, TEMP_PASSWORD, PR_TOKEN,
       TOKEN_GENERATED_ON)
    Values
      ('admission_bank', '$shiro1$SHA-512$1024$Wz/uXRcO5PXoXCf72PI/vw==$lY+jz00kyWRYrn6DZdgOs7VGIcvmXW0L6I8IXWPTIIikvx1nWA4VlBPY7PgPUpePASb5FThxO0dZJ4a9W2LIAw==', 20101, TO_DATE('11/29/2015 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'sadmin',
       TO_DATE('11/29/2015 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 1, '33333', NULL, NULL,
       NULL);



       Insert into DB_IUMS.USERS
          (USER_ID, PASSWORD, ROLE_ID, CREATED_ON, CREATED_BY,
           LAST_LOGIN_ON, STATUS, EMPLOYEE_ID, TEMP_PASSWORD, PR_TOKEN,
           TOKEN_GENERATED_ON)
        Values
          ('admission_chairman', '$shiro1$SHA-512$1024$Wz/uXRcO5PXoXCf72PI/vw==$lY+jz00kyWRYrn6DZdgOs7VGIcvmXW0L6I8IXWPTIIikvx1nWA4VlBPY7PgPUpePASb5FThxO0dZJ4a9W2LIAw==', 10101, TO_DATE('11/29/2015 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'sadmin',
           TO_DATE('11/29/2015 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 1, '33333', NULL, NULL,
           NULL);




    //******************************ug_adm_certificates***************
    ALTER TABLE DB_IUMS.UG_ADM_CERTIFICATES
     DROP PRIMARY KEY CASCADE;

    DROP TABLE DB_IUMS.UG_ADM_CERTIFICATES CASCADE CONSTRAINTS;

    CREATE TABLE DB_IUMS.UG_ADM_CERTIFICATES
    (
      ID    NUMBER,
      CERTIFICATE_NAME  VARCHAR2(50 BYTE),
      CERTIFICATE_TYPE  VARCHAR2(30 BYTE),
      VIEW_ORDER        NUMBER
    )
    TABLESPACE SYSTEM
    RESULT_CACHE (MODE DEFAULT)
    PCTUSED    40
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
                FLASH_CACHE      DEFAULT
                CELL_FLASH_CACHE DEFAULT
               )
    LOGGING
    NOCOMPRESS
    NOCACHE
    NOPARALLEL
    MONITORING;


    --  There is no statement for index DB_IUMS.SYS_C008209.
    --  The object is created when the parent object is created.

    ALTER TABLE DB_IUMS.UG_ADM_CERTIFICATES ADD (
      PRIMARY KEY
      (CERTIFICATE_ID)
      USING INDEX
        TABLESPACE SYSTEM
        PCTFREE    10
        INITRANS   2
        MAXTRANS   255
        STORAGE    (
                    INITIAL          64K
                    NEXT             1M
                    MINEXTENTS       1
                    MAXEXTENTS       UNLIMITED
                    PCTINCREASE      0
                    FREELISTS        1
                    FREELIST GROUPS  1
                    BUFFER_POOL      DEFAULT
                    FLASH_CACHE      DEFAULT
                    CELL_FLASH_CACHE DEFAULT
                   )
      ENABLE VALIDATE);

    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (1, 'SSC Transcript', 'GL', 5);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (2, 'HSC Transcript', 'GL', 2);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (3, 'SSC Certificate', 'GL', 4);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (4, 'HSC Certificate', 'GL', 1);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (5, 'SSC Testimonial', 'GL', 6);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (6, 'HSC Testimonial', 'GL', 3);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (7, 'O-Level Transcript', 'GCE', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (8, 'A-Level Transcript', 'GCE', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (9, 'O-Level Certificate', 'GCE', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (10, 'A-Level Certificate', 'GCE', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (11, 'O-Level Testimonial', 'GCE', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (12, 'A-Level Testimonial', 'GCE', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (13, 'NID', 'ALL', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (14, 'Birth Certificate', 'ALL', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (15, 'Passport', 'ALL', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (16, 'FF Certificate 1', 'FF', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (17, 'FF Certificate 2', 'FF', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (18, 'FF Certificate 3', 'FF', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (19, 'RA Certificate 1', 'RA', NULL);
    Insert into DB_IUMS.UG_ADM_CERTIFICATES
       (CERTIFICATE_ID, CERTIFICATE_NAME, CERTIFICATE_TYPE, VIEW_ORDER)
     Values
       (20, 'RA Certificate 2', 'RA', NULL);
    COMMIT;



    //*********************ug_adm_ver_certificates****************************
    ALTER TABLE DB_IUMS.UG_ADM_VER_CERTIFICATES
     DROP PRIMARY KEY CASCADE;

    DROP TABLE DB_IUMS.UG_ADM_VER_CERTIFICATES CASCADE CONSTRAINTS;

    CREATE TABLE DB_IUMS.UG_ADM_VER_CERTIFICATES
    (
      ID          NUMBER,
      SEMESTER_ID     NUMBER,
      RECEIPT_ID      VARCHAR2(25 BYTE),
      CERTIFICATE_ID  NUMBER,
      LAST_MODIFIED   VARCHAR2(18 BYTE)
    )
    TABLESPACE SYSTEM
    RESULT_CACHE (MODE DEFAULT)
    PCTUSED    40
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
                FLASH_CACHE      DEFAULT
                CELL_FLASH_CACHE DEFAULT
               )
    LOGGING
    NOCOMPRESS
    NOCACHE
    NOPARALLEL
    MONITORING;


    CREATE UNIQUE INDEX DB_IUMS.ALL_CERTIFICATES_OF_STUDEN_U01 ON DB_IUMS.UG_ADM_VER_CERTIFICATES
    (CERTIFICATE_ID, RECEIPT_ID, SEMESTER_ID, ROW_ID)
    LOGGING
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
                FLASH_CACHE      DEFAULT
                CELL_FLASH_CACHE DEFAULT
               )
    NOPARALLEL;


    --  There is no statement for index DB_IUMS.SYS_C008226.
    --  The object is created when the parent object is created.

    CREATE OR REPLACE TRIGGER DB_IUMS.ROW_ID_TRG
    before insert ON DB_IUMS.UG_ADM_VER_CERTIFICATES
    for each row
    begin
       select validate_id_sequence.nextval
       into :new.id
       from dual;
    end;
    /


    ALTER TABLE DB_IUMS.UG_ADM_VER_CERTIFICATES ADD (
      PRIMARY KEY
      (ROW_ID)
      USING INDEX
        TABLESPACE SYSTEM
        PCTFREE    10
        INITRANS   2
        MAXTRANS   255
        STORAGE    (
                    INITIAL          64K
                    NEXT             1M
                    MINEXTENTS       1
                    MAXEXTENTS       UNLIMITED
                    PCTINCREASE      0
                    FREELISTS        1
                    FREELIST GROUPS  1
                    BUFFER_POOL      DEFAULT
                    FLASH_CACHE      DEFAULT
                    CELL_FLASH_CACHE DEFAULT
                   )
      ENABLE VALIDATE,
      CONSTRAINT ALL_CERTIFICATES_OF_STUDEN_U01
      UNIQUE (CERTIFICATE_ID, RECEIPT_ID, SEMESTER_ID, ROW_ID)
      USING INDEX DB_IUMS.ALL_CERTIFICATES_OF_STUDEN_U01
      ENABLE VALIDATE);



   //***********************ug_adm_ver_comments******************

   ALTER TABLE DB_IUMS.UG_ADM_VER_COMMENTS
    DROP PRIMARY KEY CASCADE;

   DROP TABLE DB_IUMS.UG_ADM_VER_COMMENTS CASCADE CONSTRAINTS;

   CREATE TABLE DB_IUMS.UG_ADM_VER_COMMENTS
   (
     ID         NUMBER,
     SEMESTER_ID    NUMBER,
     RECEIPT_ID     VARCHAR2(25 BYTE),
     COMMENTS       VARCHAR2(255 BYTE),
     LAST_MODIFIED  VARCHAR2(18 BYTE),
     COMMENTED_ON   DATE
   )
   TABLESPACE SYSTEM
   RESULT_CACHE (MODE DEFAULT)
   PCTUSED    40
   PCTFREE    10
   INITRANS   1
   MAXTRANS   255
   STORAGE    (
               INITIAL          64K
               NEXT             1M
               MINEXTENTS       1
               MAXEXTENTS       UNLIMITED
               PCTINCREASE      0
               FREELISTS        1
               FREELIST GROUPS  1
               BUFFER_POOL      DEFAULT
               FLASH_CACHE      DEFAULT
               CELL_FLASH_CACHE DEFAULT
              )
   LOGGING
   NOCOMPRESS
   NOCACHE
   NOPARALLEL
   MONITORING;


   --  There is no statement for index DB_IUMS.SYS_C008211.
   --  The object is created when the parent object is created.

   CREATE OR REPLACE TRIGGER DB_IUMS.ROW_ID_COMMENTS_TABLE_TRG
   before insert ON DB_IUMS.UG_ADM_VER_COMMENTS
   for each row
   begin
      select validate_id_seq.nextval
      into :new.id
      from dual;
   end;
   /


   ALTER TABLE DB_IUMS.UG_ADM_VER_COMMENTS ADD (
     PRIMARY KEY
     (ROW_ID)
     USING INDEX
       TABLESPACE SYSTEM
       PCTFREE    10
       INITRANS   2
       MAXTRANS   255
       STORAGE    (
                   INITIAL          64K
                   NEXT             1M
                   MINEXTENTS       1
                   MAXEXTENTS       UNLIMITED
                   PCTINCREASE      0
                   FREELISTS        1
                   FREELIST GROUPS  1
                   BUFFER_POOL      DEFAULT
                   FLASH_CACHE      DEFAULT
                   CELL_FLASH_CACHE DEFAULT
                  )
     ENABLE VALIDATE);


//*******************************************************************grade submission deadline*************************************************************
alter table MARKS_SUBMISSION_STATUS
rename column last_submission_date to
last_submission_date_prep;

alter table MARKS_SUBMISSION_STATUS
add last_submission_date_scr DATE;

alter table MARKS_SUBMISSION_STATUS
add last_submission_date_head DATE;

/********************************* For solr index *******************************/
CREATE TABLE DB_IUMS.INDEX_CONSUMER
(
  ID             NUMBER,
  HOST           VARCHAR2(100 BYTE),
  INSTANCE       VARCHAR2(50 BYTE),
  HEAD           DATE,
  LAST_CHECKED   DATE,
  LAST_MODIFIED  VARCHAR2(18 BYTE)
)

CREATE TABLE DB_IUMS.INDEXER
(
  ENTITY_ID      VARCHAR2(20 BYTE),
  ENTITY_TYPE    VARCHAR2(50 BYTE),
  IS_DELETED     INTEGER,
  MODIFIED       DATE,
  ID             NUMBER,
  LAST_MODIFIED  VARCHAR2(18 BYTE)
)

CREATE TABLE DB_IUMS.RESOURCE_LOCK
(
  ID             VARCHAR2(50 BYTE),
  LAST_MODIFIED  VARCHAR2(18 BYTE)
)

CREATE UNIQUE INDEX DB_IUMS.RESOURCE_LOCK_PK ON DB_IUMS.RESOURCE_LOCK
(ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


ALTER TABLE DB_IUMS.RESOURCE_LOCK ADD (
  CONSTRAINT RESOURCE_LOCK_PK
  PRIMARY KEY
  (ID)
  USING INDEX DB_IUMS.RESOURCE_LOCK_PK
  ENABLE VALIDATE);


ALTER TABLE DB_IUMS.MST_ROLE
ADD (LAST_MODIFIED VARCHAR2(18 BYTE));

ALTER TABLE DB_IUMS.USERS
ADD (LAST_MODIFIED VARCHAR2(18 BYTE));
/********************************* For solr index *******************************/
CREATE TABLE DB_IUMS.UG_FEE
(
  ID               NUMBER,
  FEE_CATEGORY_ID  VARCHAR2(30 BYTE),
  SEMESTER_ID      NUMBER,
  FACULTY_ID       NUMBER,
  AMOUNT           NUMBER,
  LAST_MODIFIED    VARCHAR2(18 BYTE)
)
CREATE TABLE DB_IUMS.UG_LATE_FEE
(
  ID             NUMBER,
  FROM_DATE      DATE,
  TO_DATE        DATE,
  FEE            NUMBER,
  SEMESTER_ID    NUMBER,
  LAST_MODIFIED  VARCHAR2(18 BYTE)
)





//********************************************Employee Information Management*****************************************


CREATE TABLE DB_IUMS.EMP_PERSONAL_INFO
(
  EMPLOYEE_ID              VARCHAR2(8 BYTE) PRIMARY KEY,
  FIRST_NAME               VARCHAR2(50 BYTE) NOT NULL,
  LAST_NAME                VARCHAR2(50 BYTE) NOT NULL,
  GENDER                   VARCHAR2(1 BYTE) NOT NULL,
  BLOOD_GROUP              NUMBER NOT NULL,
  FATHER_NAME              VARCHAR2(100 BYTE) NOT NULL,
  MOTHER_NAME              VARCHAR2(100 BYTE) NOT NULL,
  NATIONALITY              NUMBER NOT NULL,
  RELIGION                 NUMBER NOT NULL,
  DATE_OF_BIRTH            DATE NOT NULL,
  NID_NO                   VARCHAR2(17 BYTE),
  MARITAL_STATUS           NUMBER NOT NULL,
  SPOUSE_NAME              VARCHAR2(100 BYTE),
  SPOUSE_NID_NO            VARCHAR2(17 BYTE),
  WEBSITE                  VARCHAR2(100 BYTE),
  ORGANIZATIONAL_EMAIL     VARCHAR2(50 BYTE),
  PERSONAL_EMAIL           VARCHAR2(50 BYTE) NOT NULL,
  MOBILE                   VARCHAR2(14 BYTE) NOT NULL,
  PHONE                    VARCHAR2(14 BYTE),
  PRE_ADD_LINE1            VARCHAR2(100 BYTE) NOT NULL,
  PRE_ADD_LINE2            VARCHAR2(100 BYTE),
  PRE_ADD_COUNTRY          NUMBER NOT NULL,
  PRE_ADD_DIVISION         NUMBER,
  PRE_ADD_DISTRICT         NUMBER,
  PRE_ADD_THANA            NUMBER,
  PRE_ADD_POST_CODE        VARCHAR2(16 BYTE),
  PER_ADD_LINE1            VARCHAR2(100 BYTE) NOT NULL,
  PER_ADD_LINE2            VARCHAR2(100 BYTE),
  PER_ADD_COUNTRY          NUMBER NOT NULL,
  PER_ADD_DIVISION         NUMBER,
  PER_ADD_DISTRICT         NUMBER,
  PER_ADD_THANA            NUMBER,
  PER_ADD_POST_CODE        VARCHAR2(16 BYTE),
  EMERGENCY_NAME           VARCHAR2(100 BYTE),
  EMERGENCY_RELATION       NUMBER NOT NULL,
  EMERGENCY_PHONE          VARCHAR2(14 BYTE),
  EMERGENCY_ADDRESS        VARCHAR2(100 BYTE),
  LAST_MODIFIED            VARCHAR2(18 BYTE)
);

CREATE TABLE DB_IUMS.EMP_ACADEMIC_INFO
(
  ID                   NUMBER,
  EMPLOYEE_ID          VARCHAR2(8 BYTE),
  DEGREE               NUMBER,
  INSTITUTE            VARCHAR2(80 BYTE),
  PASSING_YEAR         NUMBER,
  LAST_MODIFIED        VARCHAR2(18 BYTE)
)

CREATE TABLE DB_IUMS.EMP_PUBLICATION_INFO
(
  ID                   NUMBER,
  EMPLOYEE_ID          VARCHAR2(6 BYTE),
  TITLE                VARCHAR2(100 BYTE),
  INTEREST_GENRE       VARCHAR2(100 BYTE),
  PUBLISHER_NAME       VARCHAR2(100 BYTE),
  DATE_OF_PUBLICATION  DATE,
  TYPE                 NUMBER,
  WEB_LINK             VARCHAR2(50 BYTE),
  ISSN                 VARCHAR2(30 BYTE),
  ISSUE                VARCHAR2(20 BYTE),
  VOLUME               VARCHAR2(15 BYTE),
  JOURNAL_NAME         VARCHAR2(100 BYTE),
  COUNTRY              NUMBER,
  STATUS               VARCHAR2(2 BYTE),
  PAGES                VARCHAR2(15 BYTE),
  APPLIED_ON           DATE,
  ACTION_TAKEN_ON      DATE,
  LAST_MODIFIED        VARCHAR2(18 BYTE)
);

CREATE TABLE DB_IUMS.EMP_TRAINING_INFO
(
  ID                  NUMBER,
  EMPLOYEE_ID         VARCHAR2(8 BYTE),
  TRAINING_NAME       VARCHAR2(50 BYTE),
  TRAINING_INSTITUTE  VARCHAR2(80 BYTE),
  TRAINING_FROM       VARCHAR2(50 BYTE),
  TRAINING_TO         VARCHAR2(50 BYTE),
  LAST_MODIFIED       VARCHAR2(18 BYTE)
);

CREATE TABLE DB_IUMS.EMP_AWARD_INFO
(
  ID                       NUMBER,
  EMPLOYEE_ID              VARCHAR2(8 BYTE),
  AWARD_NAME               VARCHAR2(50 BYTE),
  INSTITUTION              VARCHAR2(100 BYTE),
  AWARDED_YEAR             NUMBER,
  AWARD_SHORT_DESCRIPTION  VARCHAR2(100 BYTE),
  LAST_MODIFIED            VARCHAR2(18 BYTE)
);

CREATE TABLE DB_IUMS.EMP_EXPERIENCE_INFO
(
  ID                      NUMBER,
  EMPLOYEE_ID             VARCHAR2(8 BYTE),
  EXPERIENCE_INSTITUTE    VARCHAR2(80 BYTE),
  EXPERIENCE_DESIGNATION  VARCHAR2(30 BYTE),
  EXPERIENCE_FROM         VARCHAR2(30 BYTE),
  EXPERIENCE_TO           VARCHAR2(30 BYTE),
  LAST_MODIFIED           VARCHAR2(18 BYTE)
);

CREATE TABLE MST_EMPLOYMENT_TYPE(
ID NUMBER,
NAME VARCHAR2(25 BYTE),
LAST_MODIFIED VARCHAR2(18 BYTE)
);

CREATE TABLE AREA_OF_INTERESTS(
ID NUMBER PRIMARY KEY,
NAME VARCHAR2(50 BYTE),
LAST_MODIFIED VARCHAR2(18BYTE)
);

create sequence aoi_id_seq;
create trigger trg_aoi_id
before insert on AREA_OF_INTERESTS
for each row
begin
   select aoi_id_seq.nextval
   into :new.id
   from dual;
end;
/

CREATE TABLE EMP_AOI_INFO(
ID NUMBER PRIMARY KEY,
EMPLOYEE_ID VARCHAR2(8 BYTE),
AOI_ID NUMBER,
LAST_MODIFIED VARCHAR2(18 BYTE)
);

CREATE TABLE DB_IUMS.EMP_SERVICE_INFO
(
  ID                NUMBER PRIMARY KEY,
  EMPLOYEE_ID       VARCHAR2(8 BYTE) NOT NULL,
  DEPARTMENT        VARCHAR2(2 BYTE) NOT NULL,
  DESIGNATION       NUMBER NOT NULL,
  EMPLOYMENT        NUMBER NOT NULL,
  JOINING_DATE      DATE NOT NULL,
  RESIGN_DATE       DATE,
  ROOM_NO           VARCHAR2(15 BYTE),
  EXT_NO            VARCHAR2(6 BYTE),
  ACADEMIC_INITIAL  VARCHAR2(25 BYTE),
  STATUS            NUMBER,     //1 = CURRENT 2=OLD
  LAST_MODIFIED     VARCHAR2(18 BYTE)
);

CREATE TABLE DB_IUMS.EMP_SERVICE_DETAIL
(
  ID                NUMBER PRIMARY KEY,
  EMPLOYMENT_PERIOD NUMBER NOT NULL,
  START_DATE        DATE NOT NULL,
  END_DATE          DATE,
  SERVICE_ID        NUMBER NOT NULL,
  LAST_MODIFIED     VARCHAR2(18 BYTE)
);

CREATE TABLE DB_IUMS.EMP_ADDITIONAL_INFO
(
  EMPLOYEE_ID       VARCHAR2(8 BYTE),
  ROOM_NO           VARCHAR2(15 BYTE),
  EXT_NO            VARCHAR2(6 BYTE),
  ACADEMIC_INITIAL  VARCHAR2(25 BYTE),
  LAST_MODIFIED     VARCHAR2(18 BYTE)
);

//*********************************************************************************************************************


//*****************************************Meeting Management System**************************************************


CREATE TABLE DB_IUMS.MEETING_SCHEDULE
(
  ID              NUMBER,
  MEETING_TYPE    NUMBER,
  MEETING_NO      NUMBER,
  MEETING_REF_NO  VARCHAR2(30 BYTE),
  DATE_TIME       TIMESTAMP(6),
  ROOM            VARCHAR2(30 BYTE),
  LAST_MODIFIED   VARCHAR2(18 BYTE)
);

CREATE TABLE DB_IUMS.MEETING_AGENDA_RESOLUTION
(
  ID                 NUMBER,
  AGENDA_NO          VARCHAR2(20 BYTE),
  AGENDA             CLOB,
  AGENDA_EDITOR      VARCHAR2(1 BYTE),
  RESOLUTION         CLOB,
  RESOLUTION_EDITOR  VARCHAR2(1 BYTE),
  SCHEDULE_ID        NUMBER,
  LAST_MODIFIED      VARCHAR2(18 BYTE)
);


//********************************************************************************************************************


//***************************Leave Management System***************************************


CREATE TABLE LMS_LEAVE_TYPES(
ID NUMBER PRIMARY KEY, //LEAVE_TYPE
LEAVE_NAME VARCHAR2(50 BYTE),
PERMISSION NUMBER, //100=ALL, 200=OFFICIALS, 300=TEACHERS
DURATION NUMBER
);

CREATE TABLE LMS_LEAVE_APPLICATION(
ID NUMBER PRIMARY KEY, //APPLICATION_ID
EMP_ID VARCHAR2(6 BYTE),
LEAVE_TYPE NUMBER
APPLIED_ON DATE,
DATE_FROM DATE,
DATE_TO DATE,
REASON VARCHAR2(150 BYTE),
STATUS NUMBER
);

CREATE TABLE LMS_APPLICATION_STATUS(
ID NUMBER PRIMARY KEY,
APPLICATION_ID NUMBER
STATUS NUMBER,
ACTION_TAKEN_ON DATE,
ACTION_TAKEN_BY, // EMPLOYEE_ID
COMMENTS VARCHAR2(150 BYTE)
};



//**************************************************************************************
//*****************************************LMS****************************************
CREATE TABLE lms_type (
  id       NUMBER,
  name     VARCHAR(15),
  type     NUMBER,
  duration NUMBER,
  PRIMARY KEY (id)
);

CREATE SEQUENCE lms_type_seq START WITH 1;

CREATE OR REPLACE TRIGGER lms_type_trig
BEFORE INSERT ON lms_type
FOR EACH ROW
  BEGIN
    SELECT lms_type_seq.nextval
    INTO :new.id
    FROM dual;
  END;
/


CREATE TABLE lms_application (
  id         NUMBER,
  emp_id     VARCHAR2(8),
  type_id    NUMBER,
  applied_on TIMESTAMP,
  from_date  TIMESTAMP,
  to_date    TIMESTAMP,
  reason     VARCHAR2(200),
  PRIMARY KEY (id)
);

CREATE SEQUENCE lms_application_seq START WITH 1;

CREATE OR REPLACE TRIGGER lms_application_trig
BEFORE INSERT ON lms_application
FOR EACH ROW
  BEGIN
    SELECT lms_application_seq.nextval
    INTO :new.id
    FROM dual;
  END;
/


CREATE TABLE lms_app_status (
  id              NUMBER,
  app_id          NUMBER,
  action_taken_on TIMESTAMP,
  action_taken_by VARCHAR2(8),
  comments        VARCHAR2(200),
  action_status   NUMBER,
  PRIMARY KEY (id)
);


CREATE SEQUENCE lms_app_status_seq START WITH 1;

CREATE OR REPLACE TRIGGER lms_app_status_trig
BEFORE INSERT ON lms_app_status
FOR EACH ROW
  BEGIN
    SELECT lms_app_status_seq.nextval
    INTO :new.id
    FROM dual;
  END;
/

//***********************************admission department selection deadline ***********************
create table dept_selection_deadline(
  id number,
  semester_id number,
  unit varchar2(15),
  merit_from number,
  merit_to number,
  deadline DATE,
  PRIMARY KEY (id)
);


CREATE SEQUENCE dept_selection_deadline_seq START WITH 1;

CREATE OR REPLACE TRIGGER dept_selection_deadline_trg
BEFORE INSERT ON dept_selection_deadline
FOR EACH ROW
  BEGIN
    SELECT dept_selection_deadline_seq.nextval
    INTO :new.id
    FROM dual;
  END;
/


// ************************************** USER_VIEW *************************************************

DROP VIEW DB_IUMS.MVIEW_USERS;

/* Formatted on 12/24/2017 9:50:15 AM (QP5 v5.227.12220.39754) */
CREATE OR REPLACE FORCE VIEW DB_IUMS.MVIEW_USERS
(
   USER_ID,
   USER_NAME,
   GENDER,
   DATE_OF_BIRTH,
   BLOOD_GROUP,
   FATHER_NAME,
   MOTHER_NAME,
   MOBILE_NUMBER,
   EMAIL_ADDRESS,
   DEPARTMENT,
   DESIGNATION,
   ROLE_ID,
   STATUS
)
AS
   SELECT employee.EMPLOYEE_ID AS USER_ID,
          employee.EMPLOYEE_NAME AS USER_NAME,
          employee.GENDER AS GENDER,
          employee.BIRTH_DATE AS DATE_OF_BIRTH,
          employee.BLOOD_GROUP AS BLOOD_GROUP,
          employee.FATHER_NAME AS FATHER_NAME,
          employee.MOTHER_NAME AS MOTHER_NAME,
          employee.MOBILE_NUMBER AS MOBILE_NUMBER,
          employee.EMAIL_ADDRESS AS EMAIL_ADDRESS,
          employee.DEPT_OFFICE AS DEPARTMENT,
          employee.DESIGNATION AS DESIGNATION,
          a_user.ROLE_ID AS ROLE_ID,
          a_user.status
     FROM EMPLOYEES employee, USERS a_user
    WHERE a_user.EMPLOYEE_ID = employee.EMPLOYEE_ID
   UNION
   SELECT stud.STUDENT_ID AS USER_ID,
          stud.FULL_NAME AS USER_NAME,
          stud.GENDER AS GENDER,
          stud.BIRTH_DATE AS DATE_OF_BIRTH,
          stud.BLOOD_GROUP AS BLOOD_GROUP,
          stud.FATHER_NAME AS FATHER_NAME,
          stud.MOTHER_NAME AS MOTHER_NAME,
          stud.MOBILE_NUMBER AS MOBILE_NUMBER,
          stud.EMAIL_ADDRESS AS EMAIL_ADDRESS,
          stud.DEPT_ID AS DEPARTMENT,
          NULL,
          a_user.ROLE_ID AS ROLE_ID,
          a_user.status
     FROM STUDENTS stud, USERS a_user
    WHERE a_user.USER_ID = stud.STUDENT_ID;




// ************************************************ LIBRARY CIRCULATION *******************************************


DROP TABLE DB_IUMS_LIBRARY.CIRCULATION CASCADE CONSTRAINTS;

CREATE TABLE DB_IUMS_LIBRARY.CIRCULATION
(
  ID             NUMBER,
  PATRON_ID      VARCHAR2(9 BYTE)               NOT NULL,
  MFN            NUMBER                         NOT NULL,
  ISSUE_DATE     DATE                           NOT NULL,
  DUE_DATE       DATE                           NOT NULL,
  LAST_MODIFIED  VARCHAR2(18 BYTE),
  RETURN_DATE    DATE,
  FINE_STATUS    NUMBER
)



DROP TABLE DB_IUMS_LIBRARY.FINE CASCADE CONSTRAINTS;

CREATE TABLE DB_IUMS_LIBRARY.FINE
(
  ID                 NUMBER,
  CIRCULATION_ID     NUMBER                     NOT NULL,
  AMOUNT             FLOAT(126)                 NOT NULL,
  FINE_CATEGORY      NUMBER                     NOT NULL,
  LAST_MODIFIED      VARCHAR2(18 BYTE),
  DESCRIPTION        VARCHAR2(80 BYTE),
  FINE_APPLIED_DATE  DATE,
  FINE_APPLIED_BY    VARCHAR2(9 BYTE),
  FINE_FORGIVEN_BY   VARCHAR2(9 BYTE),
  FINE_PAYMENT_DATE  DATE
)

------------------------------- ALTER EMPLOYEE_TYPE ---------------------------------------

ALTER TABLE MST_DESIGNATION ADD OLD_EMPLOYEE_TYPE NUMBER;

UPDATE MST_DESIGNATION SET OLD_EMPLOYEE_TYPE = EMPLOYEE_TYPE;

ALTER TABLE MST_DESIGNATION DROP COLUMN EMPLOYEE_TYPE;

ALTER TABLE MST_DESIGNATION RENAME COLUMN OLD_EMPLOYEE_TYPE to EMPLOYEE_TYPE;


-----------------------------------------------------------------------------------------


----------------------------- Update in EMP_PERSONAL_INFO Information ------------------------------

UPDATE EMP_PERSONAL_INFO per1
   SET FIRST_NAME =
          (SELECT CONCAT (CONCAT (per2.FIRST_NAME, ' '), per2.LAST_NAME)
                     AS NAME
             FROM EMP_PERSONAL_INFO per2
            WHERE PER2.EMPLOYEE_ID = per1.EMPLOYEE_ID);

ALTER TABLE EMP_PERSONAL_INFO
            DROP COLUMN LAST_NAME;

ALTER TABLE EMP_PERSONAL_INFO
    RENAME COLUMN FIRST_NAME TO NAME;


CREATE OR REPLACE FORCE VIEW DB_IUMS.MVIEW_USERS
(
   USER_ID,
   USER_NAME,
   GENDER,
   DATE_OF_BIRTH,
   BLOOD_GROUP,
   FATHER_NAME,
   MOTHER_NAME,
   MOBILE_NUMBER,
   EMAIL_ADDRESS,
   DEPARTMENT,
   DESIGNATION,
   ROLE_ID,
   STATUS,
   LOGIN_ID
)
AS
   SELECT employee.EMPLOYEE_ID AS USER_ID,
          EPI.NAME AS USER_NAME,
          epi.GENDER AS GENDER,
          epi.DATE_OF_BIRTH AS DATE_OF_BIRTH,
          CASE
             WHEN epi.BLOOD_GROUP = 1 THEN 'A+'
             WHEN epi.BLOOD_GROUP = 2 THEN 'A-'
             WHEN epi.BLOOD_GROUP = 3 THEN 'B+'
             WHEN epi.BLOOD_GROUP = 4 THEN 'B-'
             WHEN epi.BLOOD_GROUP = 5 THEN 'AB+'
             WHEN epi.BLOOD_GROUP = 6 THEN 'AB-'
             WHEN epi.BLOOD_GROUP = 7 THEN 'O+'
             WHEN epi.BLOOD_GROUP = 8 THEN 'O-'
             WHEN epi.BLOOD_GROUP = 0 THEN ' '
          END
             AS BLOOD_GROUP,
          epi.FATHER_NAME AS FATHER_NAME,
          epi.MOTHER_NAME AS MOTHER_NAME,
          epi.MOBILE AS MOBILE_NUMBER,
          epi.PERSONAL_EMAIL AS EMAIL_ADDRESS,
          employee.DEPT_OFFICE AS DEPARTMENT,
          employee.DESIGNATION AS DESIGNATION,
          a_user.ROLE_ID AS ROLE_ID,
          employee.status,
          A_USER.USER_ID
     FROM EMPLOYEES employee, USERS a_user, emp_personal_info epi
    WHERE     a_user.EMPLOYEE_ID = employee.EMPLOYEE_ID
          AND epi.employee_id = employee.employee_id
   UNION
   SELECT stud.STUDENT_ID AS USER_ID,
          stud.FULL_NAME AS USER_NAME,
          stud.GENDER AS GENDER,
          stud.BIRTH_DATE AS DATE_OF_BIRTH,
          stud.BLOOD_GROUP AS BLOOD_GROUP,
          stud.FATHER_NAME AS FATHER_NAME,
          stud.MOTHER_NAME AS MOTHER_NAME,
          stud.MOBILE_NUMBER AS MOBILE_NUMBER,
          stud.EMAIL_ADDRESS AS EMAIL_ADDRESS,
          stud.DEPT_ID AS DEPARTMENT,
          NULL,
          11,
          stud.status,
          stud.STUDENT_ID
     FROM STUDENTS stud;




CREATE OR REPLACE FORCE VIEW DB_IUMS.MVIEW_TEACHERS
(
   TEACHER_ID,
   TEACHER_NAME,
   DESIGNATION_ID,
   DESIGNATION_NAME,
   DEPT_ID,
   DEPT_NAME,
   STATUS,
   SHORT_NAME
)
AS
   SELECT emp.EMPLOYEE_ID TEACHER_ID,
          epi.name TEACHER_NAME,
          DESIGNATION DESIGNATION_ID,
          DESIGNATION_NAME,
          DEPT.DEPT_ID,
          DEPT.SHORT_NAME DEPT_NAME,
          STATUS,
          emp.SHORT_NAME
     FROM EMPLOYEES emp,
          emp_personal_info epi,
          MST_DESIGNATION designation,
          MST_EMPLOYEE_TYPE empType,
          MST_DEPT_OFFICE dept
    WHERE     TYPE_ID = 1
          AND epi.employee_id = emp.employee_id
          AND emp.DESIGNATION = designation.DESIGNATION_ID
          AND DESIGNATION.EMPLOYEE_TYPE = EMPTYPE.TYPE_ID
          AND DEPT.DEPT_ID = EMP.DEPT_OFFICE;

---------------------------------------------------------------------------------------------------