<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd"
       xmlns:tx="http://www.springframework.org/schema/tx">

  <context:spring-configured/>
  <context:component-scan
      base-package="org.ums.dummy.shared,org.ums.cache,org.ums.configuration,org.ums.services,org.ums.message,org.ums.persistent.model"/>
  <context:annotation-config/>
  <context:spring-configured/>

  <bean id="dataSource" name="dataSource" primary="true"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${jdbc.driverClass}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
  </bean>

  <bean id="libraryDataSource" name="libraryDataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${jdbc.driverClass}"/>
    <property name="url" value="${lms.jdbc.url}"/>
    <property name="username" value="${lms.jdbc.username}"/>
    <property name="password" value="${lms.jdbc.password}"/>
  </bean>


  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager"/>
  </bean>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="umsJdbcTemplate" class="org.ums.statistics.UMSJdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="lmsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="libraryDataSource"/>
  </bean>

  <bean id="jdbcTemplateFactory" class="org.ums.statistics.JdbcTemplateFactoryImpl">
    <property name="loggingEnabled" value="${enable.query.logging}"/>
  </bean>

  <bean id="idGenerator" class="org.ums.generator.IdGenerator"/>

  <bean id="loggerEntryManager" class="org.ums.persistent.dao.PersistentLoggerEntryDao">
    <constructor-arg name="pJdbcTemplate" ref="jdbcTemplate"/>
    <constructor-arg name="pIdGenerator" ref="idGenerator"/>
  </bean>

  <tx:annotation-driven transaction-manager="transactionManager"/>

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:jdbc.properties</value>
        <value>classpath:common.properties</value>
        <value>classpath:mail-config.properties</value>
        <value>classpath:caching.properties</value>
        <value>classpath:mongodb.properties</value>
        <value>classpath:notification.properties</value>
        <value>${UMS_CONFIG}/jdbc.properties</value>
        <value>${UMS_CONFIG}/ftp.properties</value>
        <value>${UMS_CONFIG}/common.properties</value>
        <value>${UMS_CONFIG}/mail-config.properties</value>
        <value>${UMS_CONFIG}/caching.properties</value>
        <value>${UMS_CONFIG}/mongodb.properties</value>
        <value>${UMS_CONFIG}/notification.properties</value>
      </list>
    </property>
    <property name="ignoreUnresolvablePlaceholders" value="true"/>
    <property name="ignoreResourceNotFound" value="true"/>
  </bean>

  <bean id="contextApplicationContextProvider" class="org.ums.context.ApplicationContextProvider"></bean>


  <mongo:mongo host="${mongo.host}" port="${mongo.port}" id="mongo">
    <mongo:options
        connections-per-host="${mongo.connectionsPerHost}"
        threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
        connect-timeout="${mongo.connectTimeout}"
        max-wait-time="${mongo.maxWaitTime}"
        auto-connect-retry="${mongo.autoConnectRetry}"
        socket-keep-alive="${mongo.socketKeepAlive}"
        socket-timeout="${mongo.socketTimeout}"
        slave-ok="${mongo.slaveOk}"
        write-number="${mongo.writeNumber}"
        write-timeout="${mongo.writeTimeout}"
        write-fsync="${mongo.writeFsync}"/>
  </mongo:mongo>

  <mongo:db-factory dbname="${mongo.db_name}" mongo-ref="mongo" id="mongoDbFactory"/>

  <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
    <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
  </bean>

  <import resource="caching.xml"/>
  <import resource="application-context.xml"/>
  <import resource="integration-context.xml"/>

</beans>
